{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julie\\\\Desktop\\\\Projet fil rouge\\\\Front fil rouge\\\\src\\\\components\\\\formRegister\\\\Forms.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './forms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forms() {\n  _s();\n  const [formData, setFormData] = useState({\n    fname: '',\n    lname: '',\n    mail: '',\n    password: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    const jsonData = JSON.stringify(formData);\n    fetch('http://localhost:8080/api/createUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: jsonData\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Erreur lors de la requête');\n      }\n      return response.status;\n    }).then(data => {\n      console.log('Réponse du serveur :', data);\n    }).catch(error => {\n      console.error('Erreur :', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formRegister\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputRegister\",\n      name: \"fname\",\n      placeholder: \"Pr\\xE9nom\",\n      value: formData.fname,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputRegister\",\n      name: \"lname\",\n      placeholder: \"Nom\",\n      value: formData.lname,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"inputRegister\",\n      name: \"mail\",\n      placeholder: \"E-mail\",\n      value: formData.mail,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"inputRegister\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: \"submitRegister\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n_s(Forms, \"qTRnk8zF+MG1w6RpLQrkXNmQdnk=\");\n_c = Forms;\nexport default Forms;\nvar _c;\n$RefreshReg$(_c, \"Forms\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Forms","_s","formData","setFormData","fname","lname","mail","password","handleInputChange","e","name","value","target","handleSubmit","jsonData","JSON","stringify","fetch","method","headers","body","then","response","ok","Error","status","data","console","log","catch","error","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Julie/Desktop/Projet fil rouge/Front fil rouge/src/components/formRegister/Forms.js"],"sourcesContent":["import { useState } from 'react';\nimport './forms.css'\n\nfunction Forms(){\n        \n     const [formData, setFormData] = useState({\n          fname: '',\n          lname: '',\n          mail: '',\n          password: ''\n        });\n      \n        const handleInputChange = (e) => {\n          const { name, value } = e.target;\n          setFormData({\n            ...formData,\n            [name]: value,\n          });\n        };\n      \n        const handleSubmit = (e) => {\n       \n          const jsonData = JSON.stringify(formData);\n      \n\n          fetch('http://localhost:8080/api/createUser', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: jsonData,\n          })\n            .then((response) => {\n              if (!response.ok) {\n                throw new Error('Erreur lors de la requête');\n              }\n              return response.status;\n            })\n            .then((data) => {\n          \n              console.log('Réponse du serveur :', data);\n            })\n            .catch((error) => {\n              console.error('Erreur :', error);\n            });\n        };\n\n\n    return(\n\n        \n            <form className=\"formRegister\" onSubmit={handleSubmit}>\n                <input type=\"text\" className=\"inputRegister\" name=\"fname\" placeholder=\"Prénom\" \n                value={formData.fname} onChange={handleInputChange}></input>\n\n                <input type=\"text\" className=\"inputRegister\" name=\"lname\" placeholder=\"Nom\"\n                value={formData.lname} onChange={handleInputChange}></input>\n\n                <input type=\"text\" className=\"inputRegister\" name=\"mail\" placeholder=\"E-mail\"\n                value={formData.mail} onChange={handleInputChange}></input>\n\n                <input type=\"password\" className=\"inputRegister\" name=\"password\" placeholder=\"Password\"\n                value={formData.password} onChange={handleInputChange}></input>\n                \n                <input type=\"submit\" className=\"submitRegister\" ></input>\n            </form>\n\n    );\n\n\n}\n\nexport default Forms;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}